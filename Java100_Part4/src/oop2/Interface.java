// 자바의 인터페이스 문법을 예제 코드로 구현해보시오.
// 이 문제는 자바 문법중 인터페이스에 대한 개념과 어떻게 사용하는지에 대해서 아는지를 묻는 문제이다

package oop2;

public class Interface {

	// [!] : 인터페이스란?
	// 사전적 의미 : 결합부 ,접속기 --> 사용자 또는 컴퓨터 간에 통신이 가능하도록 해주는 디바이스나 프로그램
	// 큰 틀에서 본다면 자바에서의 인터페이스 개념도 비슷하다
	// 상호 간 통신을 위해서는 "규격"이 중요하다 --> 일본의 110v 가전제품이 한국에서의 규격과 맞지 않으므로 사용할 수 없다
	// 일본의 가전기업들이 한국에서 전자제품을 팔고 싶다면 팔고 싶다면 한국 내 220v 규격을 지켜서 만들어야 팔 수 있따.
	// 이러한 "규격"을 인터페이스라 할 수 있고, 인터페이스는 하나의 "표준화"를 제공하는 것이라 할 수 있따
	
	// 추상 클래스 vs 인터페이스
	// 추상 클래스와 거의 비슷하다. --> 그러나 추상화 정도가 더 높다 (더 엄격하다) --> 따라서, 일반 메서드 멤버 필드(변수)를 가질 수 없다
	
	// 자바에서의 인터페이스 문법
	// 표준화 및 규격을 인터페이스로 제공
	// 따라서 어떤 클래스가 해당 인터페이스를 사용(상속)한다면 인터페이스에 선언되어져 있는 메서드를 구현해야 한다
	// 인터페이스는 class 키워드를 사용하지 않고, --> 별도의 interface 키워드를 사용한다
	// class --> extends 			interface --> implement
	// 추상 클래스와 같이 메서드의 구체적인 내용은 기술되어있지 않으므로 인터페이스를 상속받은 클래스에서 재정의(오버라이딩)하여 사용해야 한다
	
	// 상속 vs 구현
	// 클래스와 인터페이스 이 둘의 가장 큰 차이점 중 하나는 "상속"이다. --> a,b
	// 자바에서 클래스는 "단일 상속"만 가능하지만, 인터페이스는 "다중 상속"이 가능하다.
	// 그러나 인터페이스에서는 extends 표현을 쓰지않고 "구현"의 의미를 강조하는 implements키워드를 사용하여 다중 상속을 구하하하
}
