// 다형성(polymorphism)에 대해서 개념 설명을 해보시오.
// 이 문제는 자바의 다형성에 대한 개념을 알고 있고 그것을 쉽게 설명할 수 있는지를 묻는 문제이다.

package oop2;

public class Polymorphism {
	
	// [1] : 다형성
	// 다양한 형태 또는 특성을 가진다는 의미
	// 자바와 같은 객체지향 언어에서의 의미는 부모클래스를 상속받은 바식클래스의 인스턴스가 부모의 객체로도 사용되고,
	// 뿐만 아니라, 자식클래스의 객체로도 사용될 수 있는 다양한 상황을 의미한다
	
	// [2] : 예시
	// 부모 클래스 bird가 있고, 이를 상속받은 자시글래스 parrot이 있다고 가정
	// 이때, "앵무새가 말을 하네" 라고 사람들이 말할 수 있따
	// 그런데 앵수새는 새이기 때문에 "새가 말을 하네" 이렇게도 말할 수 있다 = 다형성
	
	// [3] : 결론
	// 하위클래스의 인스턴스(객체)는 상위클래스의 인스턴스(객체)로도 사용될 수 있다
	// 그러나 그 반대는 안된다
	// 왜냐하면, "앵무새"는 상위인 "새"라고 말할 수 있지만, 새는 앵무새만 있는것은 아니다
	// 즉, 상위클래스의 인스턴스(객체)는 하위클래스의 인스턴스(객체)로는 사용될 수 없다
	
	// Bird p1 = new Parrot();	(O)		==> 부모가 자식클래스를 생성할 수 있다 (반대는 불가능)
	// Parrot p1 = new Bird(); (X)

}


